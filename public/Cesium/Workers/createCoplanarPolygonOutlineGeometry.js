define(["./arrayRemoveDuplicates-0d8dde26","./Transforms-f17097e5","./Matrix3-b2351961","./ComponentDatatype-ab629b88","./CoplanarPolygonGeometryLibrary-c5fc6f2f","./defaultValue-f6d5e6da","./GeometryAttribute-9c1a6bab","./GeometryAttributes-1e4ddcd2","./GeometryInstance-c4920693","./GeometryPipeline-a9233ae3","./IndexDatatype-a9b1bc18","./PolygonGeometryLibrary-b67529a6","./Math-355606c6","./Matrix2-7a8e9daf","./RuntimeError-9b4ce3fb","./combine-0c102d93","./WebGLConstants-7f557f93","./OrientedBoundingBox-c083edd8","./EllipsoidTangentPlane-c3e9d965","./AxisAlignedBoundingBox-04c1a5e3","./IntersectionTests-f1b36d69","./Plane-5931b53e","./AttributeCompression-0b8f7b7d","./EncodedCartesian3-abad5e8c","./ArcType-26a3f38d","./EllipsoidRhumbLine-1289f7e8","./PolygonPipeline-3fa47499"],function(e,t,n,r,o,i,a,l,y,c,s,u,p,d,m,f,b,g,h,P,G,L,C,T,E,A,H){"use strict";function k(e){let t=(e=i.defaultValue(e,i.defaultValue.EMPTY_OBJECT)).polygonHierarchy;this._polygonHierarchy=t,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=u.PolygonGeometryLibrary.computeHierarchyPackedLength(t,n.Cartesian3)+1}k.fromPositions=function(e){return new k({polygonHierarchy:{positions:(e=i.defaultValue(e,i.defaultValue.EMPTY_OBJECT)).positions}})},k.pack=function(e,t,r){return r=i.defaultValue(r,0),t[r=u.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,r,n.Cartesian3)]=e.packedLength,t};let x={polygonHierarchy:{}};return k.unpack=function(e,t,r){t=i.defaultValue(t,0);let o=u.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t,n.Cartesian3);t=o.startingIndex,delete o.startingIndex;let a=e[t];return i.defined(r)||(r=new k(x)),r._polygonHierarchy=o,r.packedLength=a,r},k.createGeometry=function(i){let p=i._polygonHierarchy,d=p.positions;if((d=e.arrayRemoveDuplicates(d,n.Cartesian3.equalsEpsilon,!0)).length<3||!o.CoplanarPolygonGeometryLibrary.validOutline(d))return;let m=u.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(p,!1);if(0===m.length)return;let f=[];for(let e=0;e<m.length;e++){let t=new y.GeometryInstance({geometry:function(e){let t=e.length,n=new Float64Array(3*t),o=s.IndexDatatype.createTypedArray(t,2*t),i=0,y=0;for(let r=0;r<t;r++){let a=e[r];n[i++]=a.x,n[i++]=a.y,n[i++]=a.z,o[y++]=r,o[y++]=(r+1)%t}let c=new l.GeometryAttributes({position:new a.GeometryAttribute({componentDatatype:r.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:n})});return new a.Geometry({attributes:c,indices:o,primitiveType:a.PrimitiveType.LINES})}(m[e])});f.push(t)}let b=c.GeometryPipeline.combineInstances(f)[0],g=t.BoundingSphere.fromPoints(p.positions);return new a.Geometry({attributes:b.attributes,indices:b.indices,primitiveType:b.primitiveType,boundingSphere:g})},function(e,t){return i.defined(t)&&(e=k.unpack(e,t)),e._ellipsoid=n.Ellipsoid.clone(e._ellipsoid),k.createGeometry(e)}});