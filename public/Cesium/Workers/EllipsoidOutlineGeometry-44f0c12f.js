define(["exports","./GeometryOffsetAttribute-1772960d","./Transforms-d13cc04e","./Matrix2-9aa31791","./ComponentDatatype-93750d1a","./when-4bbc8319","./RuntimeError-346a3079","./GeometryAttribute-43536dc0","./GeometryAttributes-7827a6c2","./IndexDatatype-b7d979a6"],function(i,t,e,a,r,n,o,s,m,u){"use strict";var f=new a.Cartesian3(1,1,1),d=Math.cos,l=Math.sin;function c(i){i=n.defaultValue(i,n.defaultValue.EMPTY_OBJECT);var t=n.defaultValue(i.radii,f),e=n.defaultValue(i.innerRadii,t),o=n.defaultValue(i.minimumClock,0),s=n.defaultValue(i.maximumClock,r.CesiumMath.TWO_PI),m=n.defaultValue(i.minimumCone,0),u=n.defaultValue(i.maximumCone,r.CesiumMath.PI),d=Math.round(n.defaultValue(i.stackPartitions,10)),l=Math.round(n.defaultValue(i.slicePartitions,8)),c=Math.round(n.defaultValue(i.subdivisions,128));this._radii=a.Cartesian3.clone(t),this._innerRadii=a.Cartesian3.clone(e),this._minimumClock=o,this._maximumClock=s,this._minimumCone=m,this._maximumCone=u,this._stackPartitions=d,this._slicePartitions=l,this._subdivisions=c,this._offsetAttribute=i.offsetAttribute,this._workerName="createEllipsoidOutlineGeometry"}c.packedLength=2*a.Cartesian3.packedLength+8,c.pack=function(i,t,e){return e=n.defaultValue(e,0),a.Cartesian3.pack(i._radii,t,e),e+=a.Cartesian3.packedLength,a.Cartesian3.pack(i._innerRadii,t,e),e+=a.Cartesian3.packedLength,t[e++]=i._minimumClock,t[e++]=i._maximumClock,t[e++]=i._minimumCone,t[e++]=i._maximumCone,t[e++]=i._stackPartitions,t[e++]=i._slicePartitions,t[e++]=i._subdivisions,t[e]=n.defaultValue(i._offsetAttribute,-1),t};var C=new a.Cartesian3,_=new a.Cartesian3,p={radii:C,innerRadii:_,minimumClock:void 0,maximumClock:void 0,minimumCone:void 0,maximumCone:void 0,stackPartitions:void 0,slicePartitions:void 0,subdivisions:void 0,offsetAttribute:void 0};c.unpack=function(i,t,e){t=n.defaultValue(t,0);var r=a.Cartesian3.unpack(i,t,C);t+=a.Cartesian3.packedLength;var o=a.Cartesian3.unpack(i,t,_);t+=a.Cartesian3.packedLength;var s=i[t++],m=i[t++],u=i[t++],f=i[t++],d=i[t++],l=i[t++],h=i[t++],v=i[t];return n.defined(e)?(e._radii=a.Cartesian3.clone(r,e._radii),e._innerRadii=a.Cartesian3.clone(o,e._innerRadii),e._minimumClock=s,e._maximumClock=m,e._minimumCone=u,e._maximumCone=f,e._stackPartitions=d,e._slicePartitions=l,e._subdivisions=h,e._offsetAttribute=-1===v?void 0:v,e):(p.minimumClock=s,p.maximumClock=m,p.minimumCone=u,p.maximumCone=f,p.stackPartitions=d,p.slicePartitions=l,p.subdivisions=h,p.offsetAttribute=-1===v?void 0:v,new c(p))},c.createGeometry=function(i){var o=i._radii;if(!(o.x<=0||o.y<=0||o.z<=0)){var f=i._innerRadii;if(!(f.x<=0||f.y<=0||f.z<=0)){var c=i._minimumClock,C=i._maximumClock,_=i._minimumCone,p=i._maximumCone,h=i._subdivisions,v=a.Ellipsoid.fromCartesian3(o),y=i._slicePartitions+1,k=i._stackPartitions+1;(y=Math.round(y*Math.abs(C-c)/r.CesiumMath.TWO_PI))<2&&(y=2),(k=Math.round(k*Math.abs(p-_)/r.CesiumMath.PI))<2&&(k=2);var b=0,x=1,A=f.x!==o.x||f.y!==o.y||f.z!==o.z,P=!1,M=!1;A&&(x=2,_>0&&(P=!0,b+=y),p<Math.PI&&(M=!0,b+=y));var V,g,w,E,G=h*x*(k+y),O=new Float64Array(3*G),D=2*(G+b-(y+k)*x),I=u.IndexDatatype.createTypedArray(G,D),T=0,z=Array(k),L=Array(k);for(V=0;V<k;V++)E=_+V*(p-_)/(k-1),z[V]=l(E),L[V]=d(E);var R=Array(h),N=Array(h);for(V=0;V<h;V++)w=c+V*(C-c)/(h-1),R[V]=l(w),N[V]=d(w);for(V=0;V<k;V++)for(g=0;g<h;g++)O[T++]=o.x*z[V]*N[g],O[T++]=o.y*z[V]*R[g],O[T++]=o.z*L[V];if(A)for(V=0;V<k;V++)for(g=0;g<h;g++)O[T++]=f.x*z[V]*N[g],O[T++]=f.y*z[V]*R[g],O[T++]=f.z*L[V];for(z.length=h,L.length=h,V=0;V<h;V++)E=_+V*(p-_)/(h-1),z[V]=l(E),L[V]=d(E);for(R.length=y,N.length=y,V=0;V<y;V++)w=c+V*(C-c)/(y-1),R[V]=l(w),N[V]=d(w);for(V=0;V<h;V++)for(g=0;g<y;g++)O[T++]=o.x*z[V]*N[g],O[T++]=o.y*z[V]*R[g],O[T++]=o.z*L[V];if(A)for(V=0;V<h;V++)for(g=0;g<y;g++)O[T++]=f.x*z[V]*N[g],O[T++]=f.y*z[V]*R[g],O[T++]=f.z*L[V];for(T=0,V=0;V<k*x;V++){var B=V*h;for(g=0;g<h-1;g++)I[T++]=B+g,I[T++]=B+g+1}var S=k*h*x;for(V=0;V<y;V++)for(g=0;g<h-1;g++)I[T++]=S+V+g*y,I[T++]=S+V+(g+1)*y;if(A)for(S=k*h*x+y*h,V=0;V<y;V++)for(g=0;g<h-1;g++)I[T++]=S+V+g*y,I[T++]=S+V+(g+1)*y;if(A){var U=k*h*x,F=U+h*y;if(P)for(V=0;V<y;V++)I[T++]=U+V,I[T++]=F+V;if(M)for(U+=h*y-y,F+=h*y-y,V=0;V<y;V++)I[T++]=U+V,I[T++]=F+V}var W=new m.GeometryAttributes({position:new s.GeometryAttribute({componentDatatype:r.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:O})});if(n.defined(i._offsetAttribute)){var Y=O.length,J=new Uint8Array(Y/3),j=i._offsetAttribute===t.GeometryOffsetAttribute.NONE?0:1;t.arrayFill(J,j),W.applyOffset=new s.GeometryAttribute({componentDatatype:r.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:J})}return new s.Geometry({attributes:W,indices:I,primitiveType:s.PrimitiveType.LINES,boundingSphere:e.BoundingSphere.fromEllipsoid(v),offsetAttribute:i._offsetAttribute})}}},i.EllipsoidOutlineGeometry=c});