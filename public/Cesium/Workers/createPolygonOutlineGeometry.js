define(["./defaultValue-f6d5e6da","./Matrix3-b2351961","./ArcType-26a3f38d","./Transforms-f17097e5","./ComponentDatatype-ab629b88","./EllipsoidTangentPlane-c3e9d965","./GeometryAttribute-9c1a6bab","./GeometryAttributes-1e4ddcd2","./GeometryInstance-c4920693","./GeometryOffsetAttribute-2579b8d2","./GeometryPipeline-a9233ae3","./IndexDatatype-a9b1bc18","./Math-355606c6","./PolygonGeometryLibrary-b67529a6","./PolygonPipeline-3fa47499","./Matrix2-7a8e9daf","./RuntimeError-9b4ce3fb","./combine-0c102d93","./WebGLConstants-7f557f93","./AxisAlignedBoundingBox-04c1a5e3","./IntersectionTests-f1b36d69","./Plane-5931b53e","./AttributeCompression-0b8f7b7d","./EncodedCartesian3-abad5e8c","./arrayRemoveDuplicates-0d8dde26","./EllipsoidRhumbLine-1289f7e8"],function(e,t,i,r,o,n,l,a,s,y,u,p,d,f,g,c,m,h,b,P,E,A,_,G,L,T){"use strict";let H=[],v=[];function C(r){let o=r.polygonHierarchy,n=e.defaultValue(r.ellipsoid,t.Ellipsoid.WGS84),l=e.defaultValue(r.granularity,d.CesiumMath.RADIANS_PER_DEGREE),a=e.defaultValue(r.perPositionHeight,!1),s=a&&e.defined(r.extrudedHeight),y=e.defaultValue(r.arcType,i.ArcType.GEODESIC),u=e.defaultValue(r.height,0),p=e.defaultValue(r.extrudedHeight,u);if(!s){let e=Math.max(u,p);p=Math.min(u,p),u=e}this._ellipsoid=t.Ellipsoid.clone(n),this._granularity=l,this._height=u,this._extrudedHeight=p,this._arcType=y,this._polygonHierarchy=o,this._perPositionHeight=a,this._perPositionHeightExtrude=s,this._offsetAttribute=r.offsetAttribute,this._workerName="createPolygonOutlineGeometry",this.packedLength=f.PolygonGeometryLibrary.computeHierarchyPackedLength(o,t.Cartesian3)+t.Ellipsoid.packedLength+8}C.pack=function(i,r,o){return o=e.defaultValue(o,0),o=f.PolygonGeometryLibrary.packPolygonHierarchy(i._polygonHierarchy,r,o,t.Cartesian3),t.Ellipsoid.pack(i._ellipsoid,r,o),o+=t.Ellipsoid.packedLength,r[o++]=i._height,r[o++]=i._extrudedHeight,r[o++]=i._granularity,r[o++]=i._perPositionHeightExtrude?1:0,r[o++]=i._perPositionHeight?1:0,r[o++]=i._arcType,r[o++]=e.defaultValue(i._offsetAttribute,-1),r[o]=i.packedLength,r};let x=t.Ellipsoid.clone(t.Ellipsoid.UNIT_SPHERE),O={polygonHierarchy:{}};return C.unpack=function(i,r,o){r=e.defaultValue(r,0);let n=f.PolygonGeometryLibrary.unpackPolygonHierarchy(i,r,t.Cartesian3);r=n.startingIndex,delete n.startingIndex;let l=t.Ellipsoid.unpack(i,r,x);r+=t.Ellipsoid.packedLength;let a=i[r++],s=i[r++],y=i[r++],u=1===i[r++],p=1===i[r++],d=i[r++],g=i[r++],c=i[r];return e.defined(o)||(o=new C(O)),o._polygonHierarchy=n,o._ellipsoid=t.Ellipsoid.clone(l,o._ellipsoid),o._height=a,o._extrudedHeight=s,o._granularity=y,o._perPositionHeight=p,o._perPositionHeightExtrude=u,o._arcType=d,o._offsetAttribute=-1===g?void 0:g,o.packedLength=c,o},C.fromPositions=function(t){return new C({polygonHierarchy:{positions:(t=e.defaultValue(t,e.defaultValue.EMPTY_OBJECT)).positions},height:t.height,extrudedHeight:t.extrudedHeight,ellipsoid:t.ellipsoid,granularity:t.granularity,perPositionHeight:t.perPositionHeight,arcType:t.arcType,offsetAttribute:t.offsetAttribute})},C.createGeometry=function(t){let c,m,h;let b=t._ellipsoid,P=t._granularity,E=t._polygonHierarchy,A=t._perPositionHeight,_=t._arcType,G=f.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(E,!A,b);if(0===G.length)return;let L=[],T=d.CesiumMath.chordLength(P,b.maximumRadius),C=t._height,x=t._extrudedHeight;if(t._perPositionHeightExtrude||!d.CesiumMath.equalsEpsilon(C,x,0,d.CesiumMath.EPSILON2))for(h=0;h<G.length;h++){if((c=function(e,t,r,y,u){let d,c;let m=n.EllipsoidTangentPlane.fromPoints(t,e).projectPointsOntoPlane(t,H);g.PolygonPipeline.computeWindingOrder2D(m)===g.WindingOrder.CLOCKWISE&&(m.reverse(),t=t.slice().reverse());let h=t.length,b=Array(h),P=0;if(y)for(d=new Float64Array(2*h*6),c=0;c<h;++c){b[c]=P/3;let e=t[c],i=t[(c+1)%h];d[P++]=e.x,d[P++]=e.y,d[P++]=e.z,d[P++]=i.x,d[P++]=i.y,d[P++]=i.z}else{let o=0;if(u===i.ArcType.GEODESIC)for(c=0;c<h;c++)o+=f.PolygonGeometryLibrary.subdivideLineCount(t[c],t[(c+1)%h],r);else if(u===i.ArcType.RHUMB)for(c=0;c<h;c++)o+=f.PolygonGeometryLibrary.subdivideRhumbLineCount(e,t[c],t[(c+1)%h],r);for(d=new Float64Array(3*o*2),c=0;c<h;++c){let o;b[c]=P/3,u===i.ArcType.GEODESIC?o=f.PolygonGeometryLibrary.subdivideLine(t[c],t[(c+1)%h],r,v):u===i.ArcType.RHUMB&&(o=f.PolygonGeometryLibrary.subdivideRhumbLine(e,t[c],t[(c+1)%h],r,v));let n=o.length;for(let e=0;e<n;++e)d[P++]=o[e]}}h=d.length/6;let E=b.length,A=2*(2*h+E),_=p.IndexDatatype.createTypedArray(h+E,A);for(P=0,c=0;c<h;++c)_[P++]=c,_[P++]=(c+1)%h,_[P++]=c+h,_[P++]=(c+1)%h+h;for(c=0;c<E;c++){let e=b[c];_[P++]=e,_[P++]=e+h}return new s.GeometryInstance({geometry:new l.Geometry({attributes:new a.GeometryAttributes({position:new l.GeometryAttribute({componentDatatype:o.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:d})}),indices:_,primitiveType:l.PrimitiveType.LINES})})}(b,G[h],T,A,_)).geometry=f.PolygonGeometryLibrary.scaleToGeodeticHeightExtruded(c.geometry,C,x,b,A),e.defined(t._offsetAttribute)){let e=c.geometry.attributes.position.values.length/3,i=new Uint8Array(e);t._offsetAttribute===y.GeometryOffsetAttribute.TOP?i=i.fill(1,0,e/2):(m=t._offsetAttribute===y.GeometryOffsetAttribute.NONE?0:1,i=i.fill(m)),c.geometry.attributes.applyOffset=new l.GeometryAttribute({componentDatatype:o.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:i})}L.push(c)}else for(h=0;h<G.length;h++){if((c=function(e,t,r,y,u){let d,c;let m=n.EllipsoidTangentPlane.fromPoints(t,e).projectPointsOntoPlane(t,H);g.PolygonPipeline.computeWindingOrder2D(m)===g.WindingOrder.CLOCKWISE&&(m.reverse(),t=t.slice().reverse());let h=t.length,b=0;if(y)for(d=new Float64Array(2*h*3),c=0;c<h;c++){let e=t[c],i=t[(c+1)%h];d[b++]=e.x,d[b++]=e.y,d[b++]=e.z,d[b++]=i.x,d[b++]=i.y,d[b++]=i.z}else{let o=0;if(u===i.ArcType.GEODESIC)for(c=0;c<h;c++)o+=f.PolygonGeometryLibrary.subdivideLineCount(t[c],t[(c+1)%h],r);else if(u===i.ArcType.RHUMB)for(c=0;c<h;c++)o+=f.PolygonGeometryLibrary.subdivideRhumbLineCount(e,t[c],t[(c+1)%h],r);for(d=new Float64Array(3*o),c=0;c<h;c++){let o;u===i.ArcType.GEODESIC?o=f.PolygonGeometryLibrary.subdivideLine(t[c],t[(c+1)%h],r,v):u===i.ArcType.RHUMB&&(o=f.PolygonGeometryLibrary.subdivideRhumbLine(e,t[c],t[(c+1)%h],r,v));let n=o.length;for(let e=0;e<n;++e)d[b++]=o[e]}}h=d.length/3;let P=2*h,E=p.IndexDatatype.createTypedArray(h,P);for(b=0,c=0;c<h-1;c++)E[b++]=c,E[b++]=c+1;return E[b++]=h-1,E[b++]=0,new s.GeometryInstance({geometry:new l.Geometry({attributes:new a.GeometryAttributes({position:new l.GeometryAttribute({componentDatatype:o.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:d})}),indices:E,primitiveType:l.PrimitiveType.LINES})})}(b,G[h],T,A,_)).geometry.attributes.position.values=g.PolygonPipeline.scaleToGeodeticHeight(c.geometry.attributes.position.values,C,b,!A),e.defined(t._offsetAttribute)){let e=c.geometry.attributes.position.values.length;m=t._offsetAttribute===y.GeometryOffsetAttribute.NONE?0:1;let i=new Uint8Array(e/3).fill(m);c.geometry.attributes.applyOffset=new l.GeometryAttribute({componentDatatype:o.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:i})}L.push(c)}let O=u.GeometryPipeline.combineInstances(L)[0],D=r.BoundingSphere.fromVertices(O.attributes.position.values);return new l.Geometry({attributes:O.attributes,indices:O.indices,primitiveType:O.primitiveType,boundingSphere:D,offsetAttribute:t._offsetAttribute})},function(i,r){return e.defined(r)&&(i=C.unpack(i,r)),i._ellipsoid=t.Ellipsoid.clone(i._ellipsoid),C.createGeometry(i)}});