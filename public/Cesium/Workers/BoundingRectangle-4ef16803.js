define(["exports","./Matrix2-7a8e9daf","./Matrix3-b2351961","./defaultValue-f6d5e6da","./Transforms-f17097e5"],function(t,e,i,n,h){"use strict";function r(t,e,i,h){this.x=n.defaultValue(t,0),this.y=n.defaultValue(e,0),this.width=n.defaultValue(i,0),this.height=n.defaultValue(h,0)}r.packedLength=4,r.pack=function(t,e,i){return i=n.defaultValue(i,0),e[i++]=t.x,e[i++]=t.y,e[i++]=t.width,e[i]=t.height,e},r.unpack=function(t,e,i){return e=n.defaultValue(e,0),n.defined(i)||(i=new r),i.x=t[e++],i.y=t[e++],i.width=t[e++],i.height=t[e],i},r.fromPoints=function(t,e){if(n.defined(e)||(e=new r),!n.defined(t)||0===t.length)return e.x=0,e.y=0,e.width=0,e.height=0,e;let i=t.length,h=t[0].x,d=t[0].y,a=t[0].x,u=t[0].y;for(let e=1;e<i;e++){let i=t[e],n=i.x,r=i.y;h=Math.min(n,h),a=Math.max(n,a),d=Math.min(r,d),u=Math.max(r,u)}return e.x=h,e.y=d,e.width=a-h,e.height=u-d,e};let d=new h.GeographicProjection,a=new i.Cartographic,u=new i.Cartographic;r.fromRectangle=function(t,i,h){if(n.defined(h)||(h=new r),!n.defined(t))return h.x=0,h.y=0,h.width=0,h.height=0,h;let f=(i=n.defaultValue(i,d)).project(e.Rectangle.southwest(t,a)),o=i.project(e.Rectangle.northeast(t,u));return e.Cartesian2.subtract(o,f,o),h.x=f.x,h.y=f.y,h.width=o.x,h.height=o.y,h},r.clone=function(t,e){if(n.defined(t))return n.defined(e)?(e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e):new r(t.x,t.y,t.width,t.height)},r.union=function(t,e,i){n.defined(i)||(i=new r);let h=Math.min(t.x,e.x),d=Math.min(t.y,e.y),a=Math.max(t.x+t.width,e.x+e.width),u=Math.max(t.y+t.height,e.y+e.height);return i.x=h,i.y=d,i.width=a-h,i.height=u-d,i},r.expand=function(t,e,i){i=r.clone(t,i);let n=e.x-i.x,h=e.y-i.y;return n>i.width?i.width=n:n<0&&(i.width-=n,i.x=e.x),h>i.height?i.height=h:h<0&&(i.height-=h,i.y=e.y),i},r.intersect=function(t,e){let i=t.x,n=t.y,r=e.x,d=e.y;return i>r+e.width||i+t.width<r||n+t.height<d||n>d+e.height?h.Intersect.OUTSIDE:h.Intersect.INTERSECTING},r.equals=function(t,e){return t===e||n.defined(t)&&n.defined(e)&&t.x===e.x&&t.y===e.y&&t.width===e.width&&t.height===e.height},r.prototype.clone=function(t){return r.clone(this,t)},r.prototype.intersect=function(t){return r.intersect(this,t)},r.prototype.equals=function(t){return r.equals(this,t)},t.BoundingRectangle=r});