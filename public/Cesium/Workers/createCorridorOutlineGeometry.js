define(["./arrayRemoveDuplicates-0d8dde26","./Transforms-f17097e5","./Matrix3-b2351961","./ComponentDatatype-ab629b88","./PolylineVolumeGeometryLibrary-5050cb1d","./CorridorGeometryLibrary-d09d785b","./defaultValue-f6d5e6da","./GeometryAttribute-9c1a6bab","./GeometryAttributes-1e4ddcd2","./GeometryOffsetAttribute-2579b8d2","./IndexDatatype-a9b1bc18","./Math-355606c6","./PolygonPipeline-3fa47499","./Matrix2-7a8e9daf","./RuntimeError-9b4ce3fb","./combine-0c102d93","./WebGLConstants-7f557f93","./EllipsoidTangentPlane-c3e9d965","./AxisAlignedBoundingBox-04c1a5e3","./IntersectionTests-f1b36d69","./Plane-5931b53e","./PolylinePipeline-8df321dd","./EllipsoidGeodesic-20aaff03","./EllipsoidRhumbLine-1289f7e8"],function(e,t,i,r,o,n,l,a,s,d,u,p,f,h,y,c,g,b,m,A,_,E,C,G){"use strict";let T=new i.Cartesian3,P=new i.Cartesian3,v=new i.Cartesian3;function w(e,t){let d;let p=[],f=e.positions,h=e.corners,y=e.endPositions,c=new s.GeometryAttributes,g,b,m,A=0,_=0,E=0;for(b=0;b<f.length;b+=2)A+=m=f[b].length-3,E+=m/3*4,_+=f[b+1].length-3;for(A+=3,_+=3,b=0;b<h.length;b++){g=h[b];let e=h[b].leftPositions;l.defined(e)?(A+=m=e.length,E+=m/3*2):(_+=m=h[b].rightPositions.length,E+=m/3*2)}let C=l.defined(y);C&&(A+=d=y[0].length-3,_+=d,d/=3,E+=4*d);let G=A+_,w=new Float64Array(G),L,D,x,k,V,N,O=0,H=G-1,I=d/2,M=u.IndexDatatype.createTypedArray(G/3,E+4),S=0;if(M[S++]=O/3,M[S++]=(H-2)/3,C){p.push(O/3),N=T,V=P;let e=y[0];for(b=0;b<I;b++)N=i.Cartesian3.fromArray(e,3*(I-1-b),N),V=i.Cartesian3.fromArray(e,3*(I+b),V),n.CorridorGeometryLibrary.addAttribute(w,V,O),n.CorridorGeometryLibrary.addAttribute(w,N,void 0,H),k=(D=O/3)+1,x=(L=(H-2)/3)-1,M[S++]=L,M[S++]=x,M[S++]=D,M[S++]=k,O+=3,H-=3}let B=0,R=f[B++],U=f[B++];for(w.set(R,O),w.set(U,H-U.length+1),m=U.length-3,p.push(O/3,(H-2)/3),b=0;b<m;b+=3)k=(D=O/3)+1,x=(L=(H-2)/3)-1,M[S++]=L,M[S++]=x,M[S++]=D,M[S++]=k,O+=3,H-=3;for(b=0;b<h.length;b++){let e;g=h[b];let r=g.leftPositions,a=g.rightPositions,s,d=v;if(l.defined(r)){for(H-=3,s=x,p.push(k),e=0;e<r.length/3;e++)d=i.Cartesian3.fromArray(r,3*e,d),M[S++]=s-e-1,M[S++]=s-e,n.CorridorGeometryLibrary.addAttribute(w,d,void 0,H),H-=3;p.push(s-Math.floor(r.length/6)),t===o.CornerType.BEVELED&&p.push((H-2)/3+1),O+=3}else{for(O+=3,s=k,p.push(x),e=0;e<a.length/3;e++)d=i.Cartesian3.fromArray(a,3*e,d),M[S++]=s+e,M[S++]=s+e+1,n.CorridorGeometryLibrary.addAttribute(w,d,O),O+=3;p.push(s+Math.floor(a.length/6)),t===o.CornerType.BEVELED&&p.push(O/3-1),H-=3}for(R=f[B++],U=f[B++],R.splice(0,3),U.splice(U.length-3,3),w.set(R,O),w.set(U,H-U.length+1),m=U.length-3,e=0;e<U.length;e+=3)D=(k=O/3)-1,L=(x=(H-2)/3)+1,M[S++]=L,M[S++]=x,M[S++]=D,M[S++]=k,O+=3,H-=3;O-=3,H+=3,p.push(O/3,(H-2)/3)}if(C){O+=3,H-=3,N=T,V=P;let e=y[1];for(b=0;b<I;b++)N=i.Cartesian3.fromArray(e,3*(d-b-1),N),V=i.Cartesian3.fromArray(e,3*b,V),n.CorridorGeometryLibrary.addAttribute(w,N,void 0,H),n.CorridorGeometryLibrary.addAttribute(w,V,O),D=(k=O/3)-1,L=(x=(H-2)/3)+1,M[S++]=L,M[S++]=x,M[S++]=D,M[S++]=k,O+=3,H-=3;p.push(O/3)}else p.push(O/3,(H-2)/3);return M[S++]=O/3,M[S++]=(H-2)/3,c.position=new a.GeometryAttribute({componentDatatype:r.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:w}),{attributes:c,indices:M,wallIndices:p}}function L(e){let t=(e=l.defaultValue(e,l.defaultValue.EMPTY_OBJECT)).positions,r=e.width,n=l.defaultValue(e.height,0),a=l.defaultValue(e.extrudedHeight,n);this._positions=t,this._ellipsoid=i.Ellipsoid.clone(l.defaultValue(e.ellipsoid,i.Ellipsoid.WGS84)),this._width=r,this._height=Math.max(n,a),this._extrudedHeight=Math.min(n,a),this._cornerType=l.defaultValue(e.cornerType,o.CornerType.ROUNDED),this._granularity=l.defaultValue(e.granularity,p.CesiumMath.RADIANS_PER_DEGREE),this._offsetAttribute=e.offsetAttribute,this._workerName="createCorridorOutlineGeometry",this.packedLength=1+t.length*i.Cartesian3.packedLength+i.Ellipsoid.packedLength+6}L.pack=function(e,t,r){r=l.defaultValue(r,0);let o=e._positions,n=o.length;t[r++]=n;for(let e=0;e<n;++e,r+=i.Cartesian3.packedLength)i.Cartesian3.pack(o[e],t,r);return i.Ellipsoid.pack(e._ellipsoid,t,r),r+=i.Ellipsoid.packedLength,t[r++]=e._width,t[r++]=e._height,t[r++]=e._extrudedHeight,t[r++]=e._cornerType,t[r++]=e._granularity,t[r]=l.defaultValue(e._offsetAttribute,-1),t};let D=i.Ellipsoid.clone(i.Ellipsoid.UNIT_SPHERE),x={positions:void 0,ellipsoid:D,width:void 0,height:void 0,extrudedHeight:void 0,cornerType:void 0,granularity:void 0,offsetAttribute:void 0};return L.unpack=function(e,t,r){t=l.defaultValue(t,0);let o=e[t++],n=Array(o);for(let r=0;r<o;++r,t+=i.Cartesian3.packedLength)n[r]=i.Cartesian3.unpack(e,t);let a=i.Ellipsoid.unpack(e,t,D);t+=i.Ellipsoid.packedLength;let s=e[t++],d=e[t++],u=e[t++],p=e[t++],f=e[t++],h=e[t];return l.defined(r)?(r._positions=n,r._ellipsoid=i.Ellipsoid.clone(a,r._ellipsoid),r._width=s,r._height=d,r._extrudedHeight=u,r._cornerType=p,r._granularity=f,r._offsetAttribute=-1===h?void 0:h,r):(x.positions=n,x.width=s,x.height=d,x.extrudedHeight=u,x.cornerType=p,x.granularity=f,x.offsetAttribute=-1===h?void 0:h,new L(x))},L.createGeometry=function(o){let s,h=o._positions,y=o._width,c=o._ellipsoid;h=function(e,t){for(let i=0;i<e.length;i++)e[i]=t.scaleToGeodeticSurface(e[i],e[i]);return e}(h,c);let g=e.arrayRemoveDuplicates(h,i.Cartesian3.equalsEpsilon);if(g.length<2||y<=0)return;let b=o._height,m=o._extrudedHeight,A=!p.CesiumMath.equalsEpsilon(b,m,0,p.CesiumMath.EPSILON2),_={ellipsoid:c,positions:g,width:y,cornerType:o._cornerType,granularity:o._granularity,saveAttributes:!1};if(A)_.height=b,_.extrudedHeight=m,_.offsetAttribute=o._offsetAttribute,s=function(e){let t;let i=e.ellipsoid,o=w(n.CorridorGeometryLibrary.computePositions(e),e.cornerType),s=o.wallIndices,p=e.height,h=e.extrudedHeight,y=o.attributes,c=o.indices,g=y.position.values,b=g.length,m=new Float64Array(b);m.set(g);let A=new Float64Array(2*b);if(g=f.PolygonPipeline.scaleToGeodeticHeight(g,p,i),m=f.PolygonPipeline.scaleToGeodeticHeight(m,h,i),A.set(g),A.set(m,b),y.position.values=A,b/=3,l.defined(e.offsetAttribute)){let t=new Uint8Array(2*b);if(e.offsetAttribute===d.GeometryOffsetAttribute.TOP)t=t.fill(1,0,b);else{let i=e.offsetAttribute===d.GeometryOffsetAttribute.NONE?0:1;t=t.fill(i)}y.applyOffset=new a.GeometryAttribute({componentDatatype:r.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:t})}let _=c.length,E=u.IndexDatatype.createTypedArray(A.length/3,2*(_+s.length));E.set(c);let C,G,T=_;for(t=0;t<_;t+=2){let e=c[t],i=c[t+1];E[T++]=e+b,E[T++]=i+b}for(t=0;t<s.length;t++)G=(C=s[t])+b,E[T++]=C,E[T++]=G;return{attributes:y,indices:E}}(_);else if((s=w(n.CorridorGeometryLibrary.computePositions(_),_.cornerType)).attributes.position.values=f.PolygonPipeline.scaleToGeodeticHeight(s.attributes.position.values,b,c),l.defined(o._offsetAttribute)){let e=s.attributes.position.values.length,t=o._offsetAttribute===d.GeometryOffsetAttribute.NONE?0:1,i=new Uint8Array(e/3).fill(t);s.attributes.applyOffset=new a.GeometryAttribute({componentDatatype:r.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:i})}let E=s.attributes,C=t.BoundingSphere.fromVertices(E.position.values,void 0,3);return new a.Geometry({attributes:E,indices:s.indices,primitiveType:a.PrimitiveType.LINES,boundingSphere:C,offsetAttribute:o._offsetAttribute})},function(e,t){return l.defined(t)&&(e=L.unpack(e,t)),e._ellipsoid=i.Ellipsoid.clone(e._ellipsoid),L.createGeometry(e)}});