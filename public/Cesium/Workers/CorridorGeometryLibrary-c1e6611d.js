define(["exports","./Matrix2-9aa31791","./PolylineVolumeGeometryLibrary-06826ae8","./when-4bbc8319","./ComponentDatatype-93750d1a","./PolylinePipeline-64021a2e","./Transforms-d13cc04e"],function(a,e,r,n,t,i,s){"use strict";var o={},C=new e.Cartesian3,l=new e.Cartesian3,y=new e.Cartesian3,u=new e.Cartesian3,c=[new e.Cartesian3,new e.Cartesian3],d=new e.Cartesian3,p=new e.Cartesian3,m=new e.Cartesian3,g=new e.Cartesian3,h=new e.Cartesian3,f=new e.Cartesian3,x=new e.Cartesian3,z=new e.Cartesian3,w=new e.Cartesian3,v=new e.Cartesian3,P=new s.Quaternion,A=new e.Matrix3;function B(a,n,i,o,y){var u,c=e.Cartesian3.angleBetween(e.Cartesian3.subtract(n,a,C),e.Cartesian3.subtract(i,a,l)),d=o===r.CornerType.BEVELED?1:Math.ceil(c/t.CesiumMath.toRadians(5))+1,p=3*d,m=Array(p);m[p-3]=i.x,m[p-2]=i.y,m[p-1]=i.z,u=y?e.Matrix3.fromQuaternion(s.Quaternion.fromAxisAngle(e.Cartesian3.negate(a,C),c/d,P),A):e.Matrix3.fromQuaternion(s.Quaternion.fromAxisAngle(a,c/d,P),A);var g=0;n=e.Cartesian3.clone(n,C);for(var h=0;h<d;h++)n=e.Matrix3.multiplyByVector(u,n,n),m[g++]=n.x,m[g++]=n.y,m[g++]=n.z;return m}function E(a,r,n,t){var i=C;return t||(r=e.Cartesian3.negate(r,r)),[(i=e.Cartesian3.add(a,r,i)).x,i.y,i.z,n.x,n.y,n.z]}function S(a,r,n,t){for(var i=Array(a.length),s=Array(a.length),o=e.Cartesian3.multiplyByScalar(r,n,C),c=e.Cartesian3.negate(o,l),d=0,p=a.length-1,m=0;m<a.length;m+=3){var g=e.Cartesian3.fromArray(a,m,y),h=e.Cartesian3.add(g,c,u);i[d++]=h.x,i[d++]=h.y,i[d++]=h.z;var f=e.Cartesian3.add(g,o,u);s[p--]=f.z,s[p--]=f.y,s[p--]=f.x}return t.push(i,s),t}o.addAttribute=function(a,e,r,t){var i=e.x,s=e.y,o=e.z;n.defined(r)&&(a[r]=i,a[r+1]=s,a[r+2]=o),n.defined(t)&&(a[t]=o,a[t-1]=s,a[t-2]=i)};var b=new e.Cartesian3,D=new e.Cartesian3;o.computePositions=function(a){var n,s,o,l,y,u,P,A,M=a.granularity,T=a.positions,N=a.ellipsoid,L=a.width/2,O=a.cornerType,R=a.saveAttributes,V=d,Q=p,U=m,G=g,I=h,q=f,j=x,k=z,F=w,H=v,J=[],K=R?[]:void 0,W=R?[]:void 0,X=T[0],Y=T[1];Q=e.Cartesian3.normalize(e.Cartesian3.subtract(Y,X,Q),Q),V=N.geodeticSurfaceNormal(X,V),G=e.Cartesian3.normalize(e.Cartesian3.cross(V,Q,G),G),R&&(K.push(G.x,G.y,G.z),W.push(V.x,V.y,V.z)),j=e.Cartesian3.clone(X,j),X=Y,U=e.Cartesian3.negate(Q,U);var Z,$,_=[],aa=T.length;for(Z=1;Z<aa-1;Z++){V=N.geodeticSurfaceNormal(X,V),Y=T[Z+1],Q=e.Cartesian3.normalize(e.Cartesian3.subtract(Y,X,Q),Q),I=e.Cartesian3.normalize(e.Cartesian3.add(Q,U,I),I);var ae=e.Cartesian3.multiplyByScalar(V,e.Cartesian3.dot(Q,V),b);e.Cartesian3.subtract(Q,ae,ae),e.Cartesian3.normalize(ae,ae);var ar=e.Cartesian3.multiplyByScalar(V,e.Cartesian3.dot(U,V),D);if(e.Cartesian3.subtract(U,ar,ar),e.Cartesian3.normalize(ar,ar),!t.CesiumMath.equalsEpsilon(Math.abs(e.Cartesian3.dot(ae,ar)),1,t.CesiumMath.EPSILON7)){I=e.Cartesian3.cross(I,V,I),I=e.Cartesian3.cross(V,I,I),I=e.Cartesian3.normalize(I,I);var an=L/Math.max(.25,e.Cartesian3.magnitude(e.Cartesian3.cross(I,U,C))),at=r.PolylineVolumeGeometryLibrary.angleIsGreaterThanPi(Q,U,X,N);I=e.Cartesian3.multiplyByScalar(I,an,I),at?(k=e.Cartesian3.add(X,I,k),H=e.Cartesian3.add(k,e.Cartesian3.multiplyByScalar(G,L,H),H),F=e.Cartesian3.add(k,e.Cartesian3.multiplyByScalar(G,2*L,F),F),c[0]=e.Cartesian3.clone(j,c[0]),c[1]=e.Cartesian3.clone(H,c[1]),J=S(i.PolylinePipeline.generateArc({positions:c,granularity:M,ellipsoid:N}),G,L,J),R&&(K.push(G.x,G.y,G.z),W.push(V.x,V.y,V.z)),q=e.Cartesian3.clone(F,q),G=e.Cartesian3.normalize(e.Cartesian3.cross(V,Q,G),G),F=e.Cartesian3.add(k,e.Cartesian3.multiplyByScalar(G,2*L,F),F),j=e.Cartesian3.add(k,e.Cartesian3.multiplyByScalar(G,L,j),j),O===r.CornerType.ROUNDED||O===r.CornerType.BEVELED?_.push({leftPositions:B(k,q,F,O,at)}):_.push({leftPositions:E(X,e.Cartesian3.negate(I,I),F,at)})):(F=e.Cartesian3.add(X,I,F),H=e.Cartesian3.add(F,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(G,L,H),H),H),k=e.Cartesian3.add(F,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(G,2*L,k),k),k),c[0]=e.Cartesian3.clone(j,c[0]),c[1]=e.Cartesian3.clone(H,c[1]),J=S(i.PolylinePipeline.generateArc({positions:c,granularity:M,ellipsoid:N}),G,L,J),R&&(K.push(G.x,G.y,G.z),W.push(V.x,V.y,V.z)),q=e.Cartesian3.clone(k,q),G=e.Cartesian3.normalize(e.Cartesian3.cross(V,Q,G),G),k=e.Cartesian3.add(F,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(G,2*L,k),k),k),j=e.Cartesian3.add(F,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(G,L,j),j),j),O===r.CornerType.ROUNDED||O===r.CornerType.BEVELED?_.push({rightPositions:B(F,q,k,O,at)}):_.push({rightPositions:E(X,I,k,at)})),U=e.Cartesian3.negate(Q,U)}X=Y}return V=N.geodeticSurfaceNormal(X,V),c[0]=e.Cartesian3.clone(j,c[0]),c[1]=e.Cartesian3.clone(X,c[1]),J=S(i.PolylinePipeline.generateArc({positions:c,granularity:M,ellipsoid:N}),G,L,J),R&&(K.push(G.x,G.y,G.z),W.push(V.x,V.y,V.z)),O===r.CornerType.ROUNDED&&(n=J,s=d,o=p,l=m,y=n[1],o=e.Cartesian3.fromArray(n[1],y.length-3,o),l=e.Cartesian3.fromArray(n[0],0,l),u=B(s=e.Cartesian3.midpoint(o,l,s),o,l,r.CornerType.ROUNDED,!1),P=n.length-1,A=n[P-1],y=n[P],o=e.Cartesian3.fromArray(A,A.length-3,o),l=e.Cartesian3.fromArray(y,0,l),$=[u,B(s=e.Cartesian3.midpoint(o,l,s),o,l,r.CornerType.ROUNDED,!1)]),{positions:J,corners:_,lefts:K,normals:W,endPositions:$}},a.CorridorGeometryLibrary=o});