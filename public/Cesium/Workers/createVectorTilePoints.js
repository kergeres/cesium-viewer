define(["./AttributeCompression-0b8f7b7d","./Matrix3-b2351961","./Math-355606c6","./Matrix2-7a8e9daf","./createTaskProcessorWorker","./ComponentDatatype-ab629b88","./defaultValue-f6d5e6da","./WebGLConstants-7f557f93","./RuntimeError-9b4ce3fb"],function(e,a,t,r,n,i,o,s,l){"use strict";let u=new a.Cartographic,c=new a.Cartesian3,p=new r.Rectangle,f=new a.Ellipsoid,b={min:void 0,max:void 0};return n(function(n,i){var o;let s;let l=new Uint16Array(n.positions);o=n.packedBuffer,o=new Float64Array(o),s=0,b.min=o[s++],b.max=o[s++],r.Rectangle.unpack(o,s,p),s+=r.Rectangle.packedLength,a.Ellipsoid.unpack(o,s,f);let d=b.min,m=b.max,h=l.length/3,C=l.subarray(0,h),g=l.subarray(h,2*h),w=l.subarray(2*h,3*h);e.AttributeCompression.zigZagDeltaDecode(C,g,w);let k=new Float64Array(l.length);for(let e=0;e<h;++e){let r=C[e],n=g[e],i=w[e],o=t.CesiumMath.lerp(p.west,p.east,r/32767),s=t.CesiumMath.lerp(p.south,p.north,n/32767),l=t.CesiumMath.lerp(d,m,i/32767),b=a.Cartographic.fromRadians(o,s,l,u),h=f.cartographicToCartesian(b,c);a.Cartesian3.pack(h,k,3*e)}return i.push(k.buffer),{positions:k.buffer}})});