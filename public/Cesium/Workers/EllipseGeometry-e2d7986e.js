define(["exports","./Transforms-f17097e5","./Matrix2-7a8e9daf","./Matrix3-b2351961","./ComponentDatatype-ab629b88","./defaultValue-f6d5e6da","./EllipseGeometryLibrary-d93d7f63","./GeometryAttribute-9c1a6bab","./GeometryAttributes-1e4ddcd2","./GeometryInstance-c4920693","./GeometryOffsetAttribute-2579b8d2","./GeometryPipeline-a9233ae3","./IndexDatatype-a9b1bc18","./Math-355606c6","./VertexFormat-fbdec922"],function(t,e,i,r,a,n,o,s,l,u,m,p,c,y,d){"use strict";let f=new r.Cartesian3,A=new r.Cartesian3,x=new r.Cartesian3,h=new r.Cartesian3,g=new i.Cartesian2,_=new r.Matrix3,b=new r.Matrix3,C=new e.Quaternion,w=new r.Cartesian3,M=new r.Cartesian3,E=new r.Cartesian3,I=new r.Cartographic,T=new r.Cartesian3,G=new i.Cartesian2,N=new i.Cartesian2;function P(t,u,p){let c=u.vertexFormat,y=u.center,d=u.semiMajorAxis,h=u.semiMinorAxis,P=u.ellipsoid,v=u.stRotation,V=p?t.length/3*2:t.length/3,F=u.shadowVolume,D=c.st?new Float32Array(2*V):void 0,O=c.normal?new Float32Array(3*V):void 0,S=c.tangent?new Float32Array(3*V):void 0,L=c.bitangent?new Float32Array(3*V):void 0,R=F?new Float32Array(3*V):void 0,j=0,z=w,k=M,B=E,Y=new e.GeographicProjection(P),H=Y.project(P.cartesianToCartographic(y,I),T),U=P.scaleToGeodeticSurface(y,f);P.geodeticSurfaceNormal(U,U);let Q=_,W=b;if(0!==v){let t=e.Quaternion.fromAxisAngle(U,v,C);Q=r.Matrix3.fromQuaternion(t,Q),t=e.Quaternion.fromAxisAngle(U,-v,C),W=r.Matrix3.fromQuaternion(t,W)}else Q=r.Matrix3.clone(r.Matrix3.IDENTITY,Q),W=r.Matrix3.clone(r.Matrix3.IDENTITY,W);let J=i.Cartesian2.fromElements(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,G),q=i.Cartesian2.fromElements(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,N),Z=t.length,K=p?Z:0,X=K/3*2;for(let e=0;e<Z;e+=3){let i=e+1,a=e+2,n=r.Cartesian3.fromArray(t,e,f);if(c.st){let t=r.Matrix3.multiplyByVector(Q,n,A),e=Y.project(P.cartesianToCartographic(t,I),x);r.Cartesian3.subtract(e,H,e),g.x=(e.x+d)/(2*d),g.y=(e.y+h)/(2*h),J.x=Math.min(g.x,J.x),J.y=Math.min(g.y,J.y),q.x=Math.max(g.x,q.x),q.y=Math.max(g.y,q.y),p&&(D[j+X]=g.x,D[j+1+X]=g.y),D[j++]=g.x,D[j++]=g.y}(c.normal||c.tangent||c.bitangent||F)&&(z=P.geodeticSurfaceNormal(n,z),F&&(R[e+K]=-z.x,R[i+K]=-z.y,R[a+K]=-z.z),(c.normal||c.tangent||c.bitangent)&&((c.tangent||c.bitangent)&&(k=r.Cartesian3.normalize(r.Cartesian3.cross(r.Cartesian3.UNIT_Z,z,k),k),r.Matrix3.multiplyByVector(W,k,k)),c.normal&&(O[e]=z.x,O[i]=z.y,O[a]=z.z,p&&(O[e+K]=-z.x,O[i+K]=-z.y,O[a+K]=-z.z)),c.tangent&&(S[e]=k.x,S[i]=k.y,S[a]=k.z,p&&(S[e+K]=-k.x,S[i+K]=-k.y,S[a+K]=-k.z)),c.bitangent&&(B=r.Cartesian3.normalize(r.Cartesian3.cross(z,k,B),B),L[e]=B.x,L[i]=B.y,L[a]=B.z,p&&(L[e+K]=B.x,L[i+K]=B.y,L[a+K]=B.z))))}if(c.st){Z=D.length;for(let t=0;t<Z;t+=2)D[t]=(D[t]-J.x)/(q.x-J.x),D[t+1]=(D[t+1]-J.y)/(q.y-J.y)}let $=new l.GeometryAttributes;if(c.position){let e=o.EllipseGeometryLibrary.raisePositionsToHeight(t,u,p);$.position=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e})}if(c.st&&($.st=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:D})),c.normal&&($.normal=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:O})),c.tangent&&($.tangent=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:S})),c.bitangent&&($.bitangent=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:L})),F&&($.extrudeDirection=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:R})),p&&n.defined(u.offsetAttribute)){let t=new Uint8Array(V);if(u.offsetAttribute===m.GeometryOffsetAttribute.TOP)t=t.fill(1,0,V/2);else{let e=u.offsetAttribute===m.GeometryOffsetAttribute.NONE?0:1;t=t.fill(e)}$.applyOffset=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:t})}return $}function v(t){let e=Array(t*(t+1)*12-6),i,r,a,n,o,s=0;for(i=0,a=1,n=0;n<3;n++)e[s++]=a++,e[s++]=i,e[s++]=a;for(n=2;n<t+1;++n){for(a=n*(n+1)-1,i=(n-1)*n-1,e[s++]=a++,e[s++]=i,e[s++]=a,r=2*n,o=0;o<r-1;++o)e[s++]=a,e[s++]=i++,e[s++]=i,e[s++]=a++,e[s++]=i,e[s++]=a;e[s++]=a++,e[s++]=i,e[s++]=a}for(r=2*t,++a,++i,n=0;n<r-1;++n)e[s++]=a,e[s++]=i++,e[s++]=i,e[s++]=a++,e[s++]=i,e[s++]=a;for(e[s++]=a,e[s++]=i++,e[s++]=i,e[s++]=a++,e[s++]=i++,e[s++]=i,++i,n=t-1;n>1;--n){for(e[s++]=i++,e[s++]=i,e[s++]=a,r=2*n,o=0;o<r-1;++o)e[s++]=a,e[s++]=i++,e[s++]=i,e[s++]=a++,e[s++]=i,e[s++]=a;e[s++]=i++,e[s++]=i++,e[s++]=a++}for(n=0;n<3;n++)e[s++]=i++,e[s++]=i,e[s++]=a;return e}let V=new r.Cartesian3,F=new e.BoundingSphere,D=new e.BoundingSphere;function O(t,e,a,n,s,l,u){let m=o.EllipseGeometryLibrary.computeEllipsePositions({center:t,semiMajorAxis:e,semiMinorAxis:a,rotation:n,granularity:s},!1,!0).outerPositions,p=m.length/3,c=Array(p);for(let t=0;t<p;++t)c[t]=r.Cartesian3.fromArray(m,3*t);let d=i.Rectangle.fromCartesianArray(c,l,u);return d.width>y.CesiumMath.PI&&(d.north=d.north>0?y.CesiumMath.PI_OVER_TWO-y.CesiumMath.EPSILON7:d.north,d.south=d.south<0?y.CesiumMath.EPSILON7-y.CesiumMath.PI_OVER_TWO:d.south,d.east=y.CesiumMath.PI,d.west=-y.CesiumMath.PI),d}function S(t){let e=(t=n.defaultValue(t,n.defaultValue.EMPTY_OBJECT)).center,i=n.defaultValue(t.ellipsoid,r.Ellipsoid.WGS84),a=t.semiMajorAxis,o=t.semiMinorAxis,s=n.defaultValue(t.granularity,y.CesiumMath.RADIANS_PER_DEGREE),l=n.defaultValue(t.vertexFormat,d.VertexFormat.DEFAULT),u=n.defaultValue(t.height,0),m=n.defaultValue(t.extrudedHeight,u);this._center=r.Cartesian3.clone(e),this._semiMajorAxis=a,this._semiMinorAxis=o,this._ellipsoid=r.Ellipsoid.clone(i),this._rotation=n.defaultValue(t.rotation,0),this._stRotation=n.defaultValue(t.stRotation,0),this._height=Math.max(m,u),this._granularity=s,this._vertexFormat=d.VertexFormat.clone(l),this._extrudedHeight=Math.min(m,u),this._shadowVolume=n.defaultValue(t.shadowVolume,!1),this._workerName="createEllipseGeometry",this._offsetAttribute=t.offsetAttribute,this._rectangle=void 0,this._textureCoordinateRotationPoints=void 0}S.packedLength=r.Cartesian3.packedLength+r.Ellipsoid.packedLength+d.VertexFormat.packedLength+9,S.pack=function(t,e,i){return i=n.defaultValue(i,0),r.Cartesian3.pack(t._center,e,i),i+=r.Cartesian3.packedLength,r.Ellipsoid.pack(t._ellipsoid,e,i),i+=r.Ellipsoid.packedLength,d.VertexFormat.pack(t._vertexFormat,e,i),i+=d.VertexFormat.packedLength,e[i++]=t._semiMajorAxis,e[i++]=t._semiMinorAxis,e[i++]=t._rotation,e[i++]=t._stRotation,e[i++]=t._height,e[i++]=t._granularity,e[i++]=t._extrudedHeight,e[i++]=t._shadowVolume?1:0,e[i]=n.defaultValue(t._offsetAttribute,-1),e};let L=new r.Cartesian3,R=new r.Ellipsoid,j=new d.VertexFormat,z={center:L,ellipsoid:R,vertexFormat:j,semiMajorAxis:void 0,semiMinorAxis:void 0,rotation:void 0,stRotation:void 0,height:void 0,granularity:void 0,extrudedHeight:void 0,shadowVolume:void 0,offsetAttribute:void 0};S.unpack=function(t,e,i){e=n.defaultValue(e,0);let a=r.Cartesian3.unpack(t,e,L);e+=r.Cartesian3.packedLength;let o=r.Ellipsoid.unpack(t,e,R);e+=r.Ellipsoid.packedLength;let s=d.VertexFormat.unpack(t,e,j);e+=d.VertexFormat.packedLength;let l=t[e++],u=t[e++],m=t[e++],p=t[e++],c=t[e++],y=t[e++],f=t[e++],A=1===t[e++],x=t[e];return n.defined(i)?(i._center=r.Cartesian3.clone(a,i._center),i._ellipsoid=r.Ellipsoid.clone(o,i._ellipsoid),i._vertexFormat=d.VertexFormat.clone(s,i._vertexFormat),i._semiMajorAxis=l,i._semiMinorAxis=u,i._rotation=m,i._stRotation=p,i._height=c,i._granularity=y,i._extrudedHeight=f,i._shadowVolume=A,i._offsetAttribute=-1===x?void 0:x,i):(z.height=c,z.extrudedHeight=f,z.granularity=y,z.stRotation=p,z.rotation=m,z.semiMajorAxis=l,z.semiMinorAxis=u,z.shadowVolume=A,z.offsetAttribute=-1===x?void 0:x,new S(z))},S.computeRectangle=function(t,e){let i=(t=n.defaultValue(t,n.defaultValue.EMPTY_OBJECT)).center,a=n.defaultValue(t.ellipsoid,r.Ellipsoid.WGS84),o=t.semiMajorAxis,s=t.semiMinorAxis,l=n.defaultValue(t.granularity,y.CesiumMath.RADIANS_PER_DEGREE);return O(i,o,s,n.defaultValue(t.rotation,0),l,a,e)},S.createGeometry=function(t){let d;if(t._semiMajorAxis<=0||t._semiMinorAxis<=0)return;let b=t._height,O=t._extrudedHeight,S=!y.CesiumMath.equalsEpsilon(b,O,0,y.CesiumMath.EPSILON2);t._center=t._ellipsoid.scaleToGeodeticSurface(t._center,t._center);let L={center:t._center,semiMajorAxis:t._semiMajorAxis,semiMinorAxis:t._semiMinorAxis,ellipsoid:t._ellipsoid,rotation:t._rotation,height:b,granularity:t._granularity,vertexFormat:t._vertexFormat,stRotation:t._stRotation};if(S)L.extrudedHeight=O,L.shadowVolume=t._shadowVolume,L.offsetAttribute=t._offsetAttribute,d=function(t){let y=t.center,d=t.ellipsoid,b=t.semiMajorAxis,V=r.Cartesian3.multiplyByScalar(d.geodeticSurfaceNormal(y,f),t.height,f);F.center=r.Cartesian3.add(y,V,F.center),F.radius=b,V=r.Cartesian3.multiplyByScalar(d.geodeticSurfaceNormal(y,V),t.extrudedHeight,V),D.center=r.Cartesian3.add(y,V,D.center),D.radius=b;let O=o.EllipseGeometryLibrary.computeEllipsePositions(t,!0,!0),S=O.positions,L=O.numPts,R=O.outerPositions,j=e.BoundingSphere.union(F,D),z=P(S,t,!0),k=v(L),B=k.length;k.length=2*B;let Y=S.length/3;for(let t=0;t<B;t+=3)k[t+B]=k[t+2]+Y,k[t+1+B]=k[t+1]+Y,k[t+2+B]=k[t]+Y;let H=c.IndexDatatype.createTypedArray(2*Y/3,k),U=new s.Geometry({attributes:z,indices:H,primitiveType:s.PrimitiveType.TRIANGLES}),Q=function(t,o){let u=o.vertexFormat,p=o.center,c=o.semiMajorAxis,y=o.semiMinorAxis,d=o.ellipsoid,b=o.height,P=o.extrudedHeight,v=o.stRotation,V=t.length/3*2,F=new Float64Array(3*V),D=u.st?new Float32Array(2*V):void 0,O=u.normal?new Float32Array(3*V):void 0,S=u.tangent?new Float32Array(3*V):void 0,L=u.bitangent?new Float32Array(3*V):void 0,R=o.shadowVolume,j=R?new Float32Array(3*V):void 0,z=0,k=w,B=M,Y=E,H=new e.GeographicProjection(d),U=H.project(d.cartesianToCartographic(p,I),T),Q=d.scaleToGeodeticSurface(p,f);d.geodeticSurfaceNormal(Q,Q);let W=e.Quaternion.fromAxisAngle(Q,v,C),J=r.Matrix3.fromQuaternion(W,_),q=i.Cartesian2.fromElements(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,G),Z=i.Cartesian2.fromElements(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,N),K=t.length,X=K/3*2;for(let e=0;e<K;e+=3){let i=e+1,a=e+2,n,o=r.Cartesian3.fromArray(t,e,f);if(u.st){let t=r.Matrix3.multiplyByVector(J,o,A),e=H.project(d.cartesianToCartographic(t,I),x);r.Cartesian3.subtract(e,U,e),g.x=(e.x+c)/(2*c),g.y=(e.y+y)/(2*y),q.x=Math.min(g.x,q.x),q.y=Math.min(g.y,q.y),Z.x=Math.max(g.x,Z.x),Z.y=Math.max(g.y,Z.y),D[z+X]=g.x,D[z+1+X]=g.y,D[z++]=g.x,D[z++]=g.y}o=d.scaleToGeodeticSurface(o,o),n=r.Cartesian3.clone(o,A),k=d.geodeticSurfaceNormal(o,k),R&&(j[e+K]=-k.x,j[i+K]=-k.y,j[a+K]=-k.z);let s=r.Cartesian3.multiplyByScalar(k,b,h);if(o=r.Cartesian3.add(o,s,o),s=r.Cartesian3.multiplyByScalar(k,P,s),n=r.Cartesian3.add(n,s,n),u.position&&(F[e+K]=n.x,F[i+K]=n.y,F[a+K]=n.z,F[e]=o.x,F[i]=o.y,F[a]=o.z),u.normal||u.tangent||u.bitangent){Y=r.Cartesian3.clone(k,Y);let s=r.Cartesian3.fromArray(t,(e+3)%K,h);r.Cartesian3.subtract(s,o,s);let l=r.Cartesian3.subtract(n,o,x);k=r.Cartesian3.normalize(r.Cartesian3.cross(l,s,k),k),u.normal&&(O[e]=k.x,O[i]=k.y,O[a]=k.z,O[e+K]=k.x,O[i+K]=k.y,O[a+K]=k.z),u.tangent&&(B=r.Cartesian3.normalize(r.Cartesian3.cross(Y,k,B),B),S[e]=B.x,S[i]=B.y,S[a]=B.z,S[e+K]=B.x,S[e+1+K]=B.y,S[e+2+K]=B.z),u.bitangent&&(L[e]=Y.x,L[i]=Y.y,L[a]=Y.z,L[e+K]=Y.x,L[i+K]=Y.y,L[a+K]=Y.z)}}if(u.st){K=D.length;for(let t=0;t<K;t+=2)D[t]=(D[t]-q.x)/(Z.x-q.x),D[t+1]=(D[t+1]-q.y)/(Z.y-q.y)}let $=new l.GeometryAttributes;if(u.position&&($.position=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:F})),u.st&&($.st=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:D})),u.normal&&($.normal=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:O})),u.tangent&&($.tangent=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:S})),u.bitangent&&($.bitangent=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:L})),R&&($.extrudeDirection=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:j})),n.defined(o.offsetAttribute)){let t=new Uint8Array(V);if(o.offsetAttribute===m.GeometryOffsetAttribute.TOP)t=t.fill(1,0,V/2);else{let e=o.offsetAttribute===m.GeometryOffsetAttribute.NONE?0:1;t=t.fill(e)}$.applyOffset=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:t})}return $}(R,t);k=function(t){let e=t.length/3,i=c.IndexDatatype.createTypedArray(e,6*e),r=0;for(let t=0;t<e;t++){let a=t,n=t+e,o=(a+1)%e,s=o+e;i[r++]=a,i[r++]=n,i[r++]=o,i[r++]=o,i[r++]=n,i[r++]=s}return i}(R);let W=c.IndexDatatype.createTypedArray(2*R.length/3,k),J=new s.Geometry({attributes:Q,indices:W,primitiveType:s.PrimitiveType.TRIANGLES}),q=p.GeometryPipeline.combineInstances([new u.GeometryInstance({geometry:U}),new u.GeometryInstance({geometry:J})]);return{boundingSphere:j,attributes:q[0].attributes,indices:q[0].indices}}(L);else if(d=function(t){let i=t.center;V=r.Cartesian3.multiplyByScalar(t.ellipsoid.geodeticSurfaceNormal(i,V),t.height,V),V=r.Cartesian3.add(i,V,V);let a=new e.BoundingSphere(V,t.semiMajorAxis),n=o.EllipseGeometryLibrary.computeEllipsePositions(t,!0,!1),s=n.positions,l=n.numPts,u=P(s,t,!1),m=v(l);return{boundingSphere:a,attributes:u,indices:m=c.IndexDatatype.createTypedArray(s.length/3,m)}}(L),n.defined(t._offsetAttribute)){let e=d.attributes.position.values.length,i=t._offsetAttribute===m.GeometryOffsetAttribute.NONE?0:1,r=new Uint8Array(e/3).fill(i);d.attributes.applyOffset=new s.GeometryAttribute({componentDatatype:a.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:r})}return new s.Geometry({attributes:d.attributes,indices:d.indices,primitiveType:s.PrimitiveType.TRIANGLES,boundingSphere:d.boundingSphere,offsetAttribute:t._offsetAttribute})},S.createShadowVolume=function(t,e,i){let r=t._granularity,a=t._ellipsoid,n=e(r,a),o=i(r,a);return new S({center:t._center,semiMajorAxis:t._semiMajorAxis,semiMinorAxis:t._semiMinorAxis,ellipsoid:a,rotation:t._rotation,stRotation:t._stRotation,granularity:r,extrudedHeight:n,height:o,vertexFormat:d.VertexFormat.POSITION_ONLY,shadowVolume:!0})},Object.defineProperties(S.prototype,{rectangle:{get:function(){return n.defined(this._rectangle)||(this._rectangle=O(this._center,this._semiMajorAxis,this._semiMinorAxis,this._rotation,this._granularity,this._ellipsoid)),this._rectangle}},textureCoordinateRotationPoints:{get:function(){return n.defined(this._textureCoordinateRotationPoints)||(this._textureCoordinateRotationPoints=function(t){let e=-t._stRotation;if(0===e)return[0,0,0,1,1,0];let i=o.EllipseGeometryLibrary.computeEllipsePositions({center:t._center,semiMajorAxis:t._semiMajorAxis,semiMinorAxis:t._semiMinorAxis,rotation:t._rotation,granularity:t._granularity},!1,!0).outerPositions,a=i.length/3,n=Array(a);for(let t=0;t<a;++t)n[t]=r.Cartesian3.fromArray(i,3*t);let l=t._ellipsoid,u=t.rectangle;return s.Geometry._textureCoordinateRotationPoints(n,e,l,u)}(this)),this._textureCoordinateRotationPoints}}}),t.EllipseGeometry=S});